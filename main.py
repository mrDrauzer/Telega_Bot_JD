import asyncio
import os
from telethon import TelegramClient, events
from telegram import Bot
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

api_id = int(os.getenv('API_ID'))
api_hash = os.getenv('API_HASH')
BOT_TOKEN = os.getenv('BOT_TOKEN')
TARGET_CHANNEL = int(os.getenv('TARGET_CHANNEL'))  # –ß–∏—Å–ª–æ–≤–æ–π ID –∫–∞–Ω–∞–ª–∞
PHONE = os.getenv('PHONE')

bot = Bot(token=BOT_TOKEN)

def load_channels(filename):
    with open(filename, encoding='utf-8') as f:
        return [line.strip() for line in f if line.strip() and not line.startswith('#')]

# –£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –∫–∞–Ω–∞–ª–æ–≤!
priority_channels = load_channels('database/channels_priority.txt')
secondary_channels = load_channels('database/channels_secondary.txt')
all_channels = priority_channels + secondary_channels

def post_to_channel(text, source):
    msg = f"üöÇ –ù–æ–≤–æ—Å—Ç—å –∏–∑ {source}:\n\n{text}\n\n#—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç #–∂–¥"
    bot.send_message(chat_id=TARGET_CHANNEL, text=msg, disable_web_page_preview=True)

async def main():
    async with TelegramClient('main', api_id, api_hash) as client:
        @client.on(events.NewMessage(chats=all_channels))
        async def handler(event):
            # –ü—É–±–ª–∏–∫—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–º–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–µ–¥–∏–∞)
            if event.text:
                post_to_channel(event.text, event.chat.username or event.chat.title)
        print('–ë–æ—Ç —Å–ª—É—à–∞–µ—Ç –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∏–∑ —Å–ø–∏—Å–∫–æ–≤...')
        await client.run_until_disconnected()

if __name__ == '__main__':
    asyncio.run(main())
